The server must:
- Pair with a users app to get to get their log in credentials
- Receive broadcast message from sensors before it they are configured
- Send configuration messages to setup unconfigured sensors
- Write unconfigured sensor data to firebase
- Read sensor configuration data from firebase
- Write Current sensor data to firebase
- Once an hour archive sensor data for history chart




Flow for user setting up garden:

- User plugs in pi server to Internet and power(server.js auto starts)
- User adds sensors to garden
- User installs app and creates an account then signs into app
- User clicks add sensor button
  - this displays list of unconfigured sensors
  - they click on a sensor give it a name and a type
- Now users can see what sensors that they have set up in their garden



Packet flow:
- Smart-Garden Server:                        - Smart-Garden Module:
  -                         <-----              - (0x10) Transmit Request: Includes address, some look up code, and configured and unconfigured.  Sent on an interval (Broadcast)
  - Parse transmit request. Store address, if its new, store in unconfigured in firebase
  - User sets up module, writes this information to firebase
  - User's info generates Remote AT commands (0x17) for each parameters(DL of module to SL of hub Xbee) changed on the module. In order to pair the two xbees. Once configured send remote AT command to stop Arduino from broadcasting configuration packet.
  - Once configured module will send (0x10) Transmit Request that the server will parse. Data will include type of data and value.






  - Note: everytime we send a (0x10) we should receive a (0x8B) Transmit Status
  - Note: On all Remote AT commands there should be a remote AT command response (0x88)



Main tasks for each frame:
- parse frames
- calculate checksums

List of used frameTypes:
- 0x10
- 0x8B
- 0x17
- 0x97
