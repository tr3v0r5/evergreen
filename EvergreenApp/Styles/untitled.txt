       <View style={styles.container}>
         <Surface width={this.state.graphWidth} height={this.state.graphHeight}>
           <Group x={100} y={100}>
             <Shape
		 d={this.state.linePath}
			   
               stroke={'orange'}
               strokeWidth={1}
             />
           </Group>
         </Surface>
	    <View key={'ticksX'}>
	           {this.state.ticks.map((tick, index) => {
	             const tickStyles = {};
				 tickStyles.width = TickWidth;
	             tickStyles.left = tick.x- (TickWidth / 2);
				 const time=tick.datum.date; 
	             return (
	               <Text key={index} style={[styles.tickLabelX, tickStyles]}>
	                 {JSON.stringify(time)}
	               </Text>
	             );
	           })}
	         </View>

	         <View key={'ticksY'}>
	           {this.state.ticks.map((tick, index) => {
	             const value = tick.datum.value;

	             const tickStyles = {};
				 tickStyles.width = TickWidth;
				 tickStyles.left = tick.x - Math.round(TickWidth * 0.5);
				 tickStyles.top = tick.y + 2 - Math.round(TickWidth * 0.65);

	             return (
	               <View key={index} style={[styles.tickLabelY, tickStyles]}>
	                 <Text style={styles.tickLabelYText}>
	                   {value};
	                 </Text>
	               </View>
	             );
	           })}
			  <View key={'ticksYDot'} style={styles.ticksYContainer}>
			             {this.state.ticks.map((tick, index) => (
			               <View
			                 key={index}
			                 style={[styles.ticksYDot, {
			                   left: tick.x,
			                   top: tick.y,
			                 }]}
			               />
			             ))}
			           </View>
			   </View>
	         
       </View>